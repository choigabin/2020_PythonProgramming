# -*- coding: utf-8 -*-
"""1. 파이썬 연습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UgTvxsUKE_-MJ31rOi-so1LI5pLG3O-b
"""

print("hello world")

"""p27 실습"""

import keyword
keyword.kwlist

import calendar
print(calendar.month(2020, 3))

print(calendar.month(1961, 12))

import datetime
now = datetime.datetime.now()
print(now)
print(now.year, now.month, now.day, now.hour, now.minute, now.second)

christmas = datetime.datetime(2020, 12, 25)
print(christmas-now)

love = datetime.datetime(2019, 12, 25)
love1 = datetime.datetime(2020, 4, 23)
print(now-love1)
print(now-love)

"""ll 변수와 자료형
2020.4.27
"""

print(8+5)
print(8-5)
print(8*5)
print(8/5)
print(8//5)
print(8%5)
print(8**5) //거듭제곱

age = 18 #java: int age=18;
print(age)
after_2=2
print(18+2)
print(age+after_2)
result = age + after_2
print(result)
after_20 = 20
print(age+after_20)

age = 18
print(age)
age+=2
print(age)
age+=1
print(age)
age -= 1
print(age)
age -=1
print(age)
age *=2
print(age)
age /=2
print(age)
age //=2
print(age)
age %=6
print(age)
age **=3
print(age)

age =18
print(type(age))
pi = 3.14
print(type(pi))
age /=2
print(type(age))
x = 10 + 3.14
print(type(x))

0b10  #2진수: 10, 10진수: 2 : binary
0o10 #8진수 : 10, 10진수 : 8 : octal
print(0o10)

print(10e3)
print(10e2)
print(10e1)
print(10e0)
print(10e-1)
print(10**3)
print(2e3)
print(3e100)
print(type(10e3))
print(2e-3)
print(1.234e5)
print(1.234e-2)

print(8+24j)
c = 1.2+3.43j #켤레 복소수
print(c)
print(type(c))
print(c.real) #실수
print(c.imag) #허수
print(c)
print(c.conjugate())
d=1j
print(d*d.conjugate())
print(d)
print(d.conjugate())

"""**★☆변환함수★☆**"""

#java: int-> String: Integer.toString(변수), new String(변수)
print(str(1234)) #python
#java: float->String: Float.toString(변수), new String(변수)
print(str(5.67))
#java: String->int: Integer.parseInt(변수)
print(type(int("123")))
print(float("5.67"))
print(type(float("5.67")))
print(float("5e4")) #50000.0
print(type(float("5e4")))  #50000.0
print(complex("3.14+5.6j")+10) #복소수
print()
print("Hello"+str(18))  #자바에서는 됬었음 문자열 +숫자

"""문자열"""

greeting = "Hello"
to = "world!"
print(greeting)
print(to)
say_hello = greeting+", "+to
print(say_hello)
print("hello"*5)
print(greeting+"\n"+to)
multiline ="""hello

world!"""

"""인덱싱과 슬라이싱"""

s = "Life is too short."
print(s)
print(s[0])  #java : s.charAt(0)
print(s[2])
print(s[17])
print(s[-1])
print(s[-2])

박재연폰 = "010-3957-5215"
print(박재연폰[3])
print(박재연폰[0]+박재연폰[1]+박재연폰[2])
print(박재연폰[0:3])
print(박재연폰[-4]+박재연폰[-3]+박재연폰[-2]+박재연폰[-1])
print(박재연폰[-4:]) #다른거 생략 뒤에것만

"""p46"""

s = "name : {}, number:{}, soccer: {}"
print(s.format("Messi", 10, True))
print("name: "+"Messi"+", number: "+str(10)+", soccer: "+str(True))
print("name: ","Messi",", number: ",10,", soccer: ",True)
m="name: {name}, number: {num}".format(num=10, name="Messi")
print(m)
m2 = "name:{0}, number: {1}".format(7, "Son heung-min")
print(m2)

"""리스트[]"""

I = []
뉴이스트 = ["황민현", "Aron", "백호", "렌","JR"]
exo = ["백현", "DO", "Suho", "첸"]
bts = ["RM","뷔","Suga","정국","지민", "진","제이홉"]
print(뉴이스트)
print(exo)
print(bts)
print(뉴이스트[4])
print(exo[2])
print(bts[0])
nums=[8,6,2]
nums + [7,3]
print(nums + [7,3]) #[8,6,2,7,3]
nums+=[7,3]
print(nums)
nums.append(20)
print(nums)
nums.append([30, 40])
print(nums)
nums.insert(1, "박재연 힘내요")
print(nums)
nums.extend([50,60])
print(nums)

"""튜플"""

t = ()
xy = (2560, 1440)
my_monitor = (1920, 1080)
color = (0xF5, 0xA9, 0xF2)
color_red = 255, 0, 0
print(t)
print(xy)
print(my_monitor)
print(color)
print(color_red)
print(xy+my_monitor)
print(my_monitor * 2)
red, green, blue = color_red
print(red)
width, height = my_monitor
print(width)
print(height)
#튜플사용
x = 3840
y = 2160
print(x,y)
a = (123, "abc", True, 123)
print(a)
print(a[0])
print(a[2:])
print(a[:2])
#튜플은 값을 수정할 수 없음
#a[0]= 456
print(a)
print(a.index("abc"))
print(a.count(123))

"""바이너리(속성, 속성값)"""

d = {}
urls = {'google':'www.google.com', '네이버': 'www.naver.com', 18:'unesco.org'}
print(urls)
print(urls[18])
urls['다음'] = 'www.daum.net'
print(urls)
urls['네이버']='naver.com'
print(urls)
del urls['네이버']
print(urls)
urls.pop(18)
print(urls)

"""셋 set()"""

game = {"LOL", "Overwatch", "Tetris", 1942,  2048}
print(game)
print(set("Funny"))
print({"F", "u", "n","y"})
print(set("happy"))
print(set([2048, "Tetris"]))
print(set({'베라':['레인보우샤베트', '녹차달고나', '체리쥬빌레'],'엽떡':'착한맛'}))
print(set(range(3)))
#요소 추가
game.add('카트라이더')
print(game)
game.update(('서든어택', '테일즈런너'))
print(game)
#요소 제거
game.remove('LOL')
print(game)
#집합연산
s3 = {3, 6 , 9, 12}
s4={4, 8, 12, 16}
print(s3 &s4) #교집합
print(s3.intersection(s4))
print(s3 | s4)   #합집합
print(s3.union(s4))  #s3 U s4
print(s3-s4) #차집합 {3, 6, 9}    {3, 6, 9, 12}-{4, 8, 12, 16}
print(s3.difference(s4))

"""참/거짓 p 59"""

a = True 
b = False
print(type(a))
print(type(b))

"""셋  | set()   |   False   p59 표에 붙이기"""

print(not True)
print(not False)
print(False and False)
print(False and True)
print(True and True)
print(True and False)
print(False or False)
print(False or True)
print(True or False)
print(True or True)

"""제어문-if문"""

name = input("교생쌤 이름을 입력하세요: ")
if name == "정수진":
  print("교생쌤 이름을 맞춘 미래의 훌륭한 인재구나")
elif name == "정코코":
  print("우리집 고양이가 자고 있어요")
else:
  print("실망이예요")

### 베라 작은 사이즈 3200원 편의점 아이스크림 1000원
pocket  = int(input("주머니에 돈이 얼마 있습니까?"))
if pocket < 1000:
  print("집에나 가자")
elif 1000 < pocket < 3200:
  print("편의점에 가세요")
else: print("당신은 부자")

### 리스트를 활용한 if문
pocket = ['student_card', 'cellphone']

if 'money' not in pocket:
  print("아마스빈 최고")
else: print("집에나 가세요")

##리스트 활용
student_id = "2403"
grade = student_id[0]
classroom = student_id[1]
number = student_id[2:]
major = "null"

#1,2,: 솦과 3,4 : dnpqthf 5,6: 디쟌
if classroom in "12":
  major = "뉴미디어소프트웨어"
elif classroom in "34":
  major = "뉴미디어웹솔루션"
else : major = "뉴미디어디자인"

print(grade + "학년 "+major+"과 "+classroom+"반 "+number+"번")

### 논리연산자를 이용한 if문 1-짝수 홀수 판별
num =18
if num>10 and num%2 ==0:
  print(num, "는 10초과 짝수 입니다")
elif num>10 and num%2 ==1:
  print(num, "는 10초과 홀수 입니다.")
elif num>10 and num%2 ==0:
  print(num, "는 10이하 짝수 입니다.")
elif num<=10 and num%2 ==1:
  print(num, "는 10이하 홀수 입니다.")
else: 
  print("올바른 숫자를 입력하세요")

###논리 연산자를 이용한 if문 2 - 카페 등업 조건
attendance = 5
post = 12

if(attendance <=30 and post >=100):
  print("프리미엄회원")
elif(attendance >=5 and post >=10):
  print("정회원")
elif(attendace >=5 or post >=10):
  print("준회원")
else : 
  print("새싹회원")

###중첩문 if문 2 - 로그인 기능
user_list = ['승아1', '나현아789', 'xf어쩌고003']

user_id = input("아이디를 입력하세요: ")
if user_id in user_list:
  pwd = input("패스워드를 입력하세요: ")
  if pwd == '456789':
    print("환영합니다!")
  else: print("잘못된 패스워드입니다.")
else: print("알 수 없는 사용자입니다. 회원가입을 하세요")

"""제어문  for문"""

# for x in range(3,9,2):
#   print(x)


# ### 문자열 
# for ch in "MIRIM":
#   print(ch)

# #### 리스트
# for favorite in ["민트초코 ", "밥 "]:
#   print(favorite + "맛있다.")

# ### 튜플
# for spec in (163, 50):
#   print(spec)

### 딕셔너리
# website = {"Naver" : "네이버", "Google" : "구글"}
# for key in website:
#   print(key, ":", website[key])

# 셋 
for item in {"HTML5", "Python", "Java"}:
  print(item +"는 쉽습니다.")

"""0~100 사이 7의 배수 합구하기"""

sum=0;
for i in range(0,99):
  if i%7==0:
    sum+=i
print("합계 : ",sum)

"""리스트 활용 for문 - 평균점수 구하기"""

score = [70, 65, 55, 75,95, 90, 80, 80, 85, 100]
avg = 0;
total =0;
for i in score:
  total+=i
  avg =total/10
print("3반 평균: ", avg)

"""포맷팅"""

print("int : %d, String: %s, float: %f" %(10, "미림", 10.1))

print("int : {}, String : {}, float: {}".format(10, "미림", 10.1))

"""리스트 활용"""

score = [70, 65, 55, 75,95, 90, 80, 80, 85, 100]
student = 0;
for i in score:
  student+=1
  if i >=80:
    print("{}번 학생은 합격입니다.".format(student))
  else:
    print("{}번 학생은 불합격입니다.".format(student))

user_dic = {'승아1':"musicismylife","나현아789":"iamsohot",'xf어쩌고003':"wearethechampion"}
for id, pwd in user_dic.items():
  print("아이디: ", id, "비밀번호: ", pwd)

"""중첩반복문 for문"""

for i in range(2, 10):
  for j in range(1, 10):
    print("{} * {} = {}".format(i,j,i*j))

###리스트 안에 리스트
apart=[[101,102, 103,104],[201,202,203,204],[301,302,303,304],[401,402,403,404]]
for floor in apart:
  for room in floor:
    print("신문배달 갑니다: ",room)

"""break, continue"""

sum=0
i=0;
for i in range(1, 10001,2):
  sum+=i
  if sum>=1000:
    break
print(i)

for i in range(2,10):
  for j in range(1,10):
    if i%2==1&j%2==1:
      print("{} * {} = {}".format(i,j,i*j))
      continue

#3을 입력하면 
#밥
#밥밥
#밥밥밥
#출력하자
num = input("숫자 입력: ")
num=int(num)
for i in range(num+1):
  print("밥"*i)

#리스트 컴프리헨션
array = []
for i in range(1, 10, 2):
  array.append(i**2)
print(array)

array2 = [i**2 for i in range(1,10,2)]
print(array2)

array3 = [i**2 for i in range(1,10,2) if i**2>40]
print(array3)

# while문
age = int(input("당신의 나이는?"))
while age>=0:
  if age // 10 ==1:
    print("10대")
  elif age //10==2:
    print("20대")
  elif age // 10 ==3:
    print("30대")
  age = int(input("당신의 나이는?"))

#매개면수가 없는 함수 정의하기
import random

def rolling_dice():
  n = random.randint(1,6)
  print("6면 주사위를 굴린 결과 : ",n)
rolling_dice()
rolling_dice()

#리스트를 사용해 여러 값을 하나로 묶어 리턴하기

def multi_num(multi,start,end):
  result = []
  for n in range(start, end):
    if n % multi ==0:
      result.append(n)
  return result
  multi2 = multi_num(17, 1, 200)
  print("multi_num(17, 1, 200) : ", multi2)
  print()
  multi3 = multi_num(3, 1, 100)
  print("multi_num(3, 1, 100) : ", multi3)

import random
n = random.randint(1,6)
print("6면 주사위 굴린 결과 : ", n)
n = random.randint(1,6)
print("6면 주사위 굴린 결과 : ", n)
n = random.randint(1,6)
print("6면 주사위 굴린 결과 : ", n)

#리스트 관련 내장 함수
list = ['d', 'c', 'a', 'b']
list.reverse()
print("리스트 항목 순서 뒤집기", list)
list.sort()
print("리스트 항목 정렬하기", list)
list.sort(reverse =True)
print("리스트 항목 역정렬하기", list)
for index, value in enumerate(list):
  print("인덱스", index, "위치의 값은 ", value)

#디폴트 값을 갖는 함수 - 기본 인자 값을 갖는 함수
def hello(msg="안녕하세요"):
  print(msg + "!")

hello("오랫만이에요")
hello("이영희")
hello()

#여러개의 기본 인자값을 여러개 사용
def hello(name="무명", msg="안녕하세요"):
  print(name+"님, "+msg+"!")

hello("김철수", "오랫만이에요")
hello()

def p(*args):
  str=""
  for a in args:
    str = str+a
  print(str)
p(+++)
p("♡", "♪")
p("♡", "♪", "♣", "♠")

def p(space, space_num, *args):
  str = args[0]
  for i in range(1, len(args)):
    str = str+(space*space_num)+args[i]
  print(str)

p(",", 3, "♡", "♪")
p("☆",2, "♡", "♪", "♣")
p("_",3,"♡", "♪", "♣", "♠")

#매개변수에 가변 인수가 있는 함수
print("♡")
print("♡", "♪")
print("♡", "♪", "♣")
print("♡", "♪", "♣","☆")

def sum(*numbers):
  sum_value = 0
  for number in numbers:
    sum_value = sum_value + number
  return sum_value

result = sum(1,3)
print("1 + 3  = ", result)
print("1 + 3 + 5 + 7 = ",sum(1, 3, 5, 7))

#위치 인자를 사용하여 함수 호출
def fn(a,b,c,d,e):
  print(a,b,c,d,e)

fn(1, 2, 3, 4,5)
fn(10,20,30,40,50)
fn(5,6,7,8,9)

import random

def rolling_dice(pip, repeat):
  for r in range(1, repeat + 1):
    n = random.randint(1, pip)
    print(pip, "면 주사위 굴린 결과", r, " : ", n)

rolling_dice(6,1)
rolling_dice(6, 2)
rolling_dice(12, 0)
rolling_dice(20, -3)

#매개변수가 하나인 함수
import random
def rolling_dice(pip):
  n = random.randint(1, pip)
  print(pip, "면 주사위 굴린 결과 : ", n)

rolling_dice(4)

def fn(a,b,c,d,e):
  print(a,b,c,d,e)

fn(1,2,3,4,5)
fn(a=1,b=2, c=3, d=4, e=5)
fn(e=5, d=4, c=3, b=2, a=1)
fn(1,2,c=3, e=5, d=4)

#매개변수가 없는 함수
#주사위 굴리는 프로그램 만들기
import random

n = random.randint(1,6)
print("결과 : ",n)
n = random.randint(1,6)
print("결과 : ", n)
n = random.randint(1,6)
print("결과 : ", n)

#내장함수와 이름이 같은 사용자 정의 함수
def input(s):
  print(s)

input("현재의 input()함수는 사용자 정의 함수입니다.")

#디폴트 값을 갖는 함수의 호출
def hello(name, msg="안녕하세요", feeling="♡"):
  print(name+"님, "+msg+feeling)

hello("아무개")
hello("김철수", "오랫만이예요", "♬")

#내장함수와 똑같은 이름의 변수 사용 - 오류예시
str = "나는 문자열"
print(str)
n =3
print(str(n))

#함수 정의가 다음과 같다고 할때 위치 인자 방식 함수 호출, 키워드 인자 방식 함수 호출 방법 사용
#star 함수 정의
def star(mark, repeat, space, space_repeat,line):
  for i in range(1, line):
    str = (mark * repeat)
    for j in range(2, repeat):
      str = str+(space * space_repeat) + (mark * repeat)
    print(str)

#튜플을 사용해 여러값을 여러개 리턴하기
def min_max(*args):
  min = args[0]
  max = args[0]
  for arg in  args:
    if min>arg:
      min = arg
    if max<arg:
      max = arg
  return min, max

print(min_max(52, -3, 23,89,-21))
min_value, max_value = min_max(52, -3, 23, 89,-21)
print("최젓값 : ", min_value)
print("최곳값: ", max_value)

#절댓값 abs(x)
print(10, "의 절댓값 : ", abs(10))
print(-10, "의 절댓값 : ", abs(-10))

def min(*numbers):
  min_value = numbers[0]
  for number in numbers:
    if min_value < number:
      min_value = number
  return min_value
returl = min(1,3)
print("min(1,3) = ", result )
print("min(0,3,-11) =", min(0,3,-11))

#기본 인자값을 가지는 함수
def hello(name, msg="안녕하세요", feeling="♡"):
  print(name + "님, "+msg+feeling)

hello("이영희", "또 만났네요")

#기본 인자값을 가지는 함수
def hello(name, msg="안녕하세요", feeling="♡"):
  print(name+"님, "+msg+feeling)

hello("박순이", feeling="!!!")
hello("Ms Jang", msg="Hello~", feeling="♪")

#기본 인자값을 가지는 함수
def hello(name, msg="안녕하세요"):
  print(name+"님, "+msg+"!")

hello("김철수", "오랜만이예요")
hello("이영희")

#가변 객체인 리스트가 기본 입자인 함수
def fn(a, b=[]):
  b.append(a)
  print(b)

fn(3)
fn(5)
fn(10)

#문자열 관련 내장 함수와 문자열 형 반환함수
user_name = input("이름은? ")
user_age = input("나이는? ")
print(user_name+"님! 나이는 "+ str(user_age)+"세군요!")
say = "{0}님! 나이는 {1}세군요 {1}세라니 놀라워요!"
print(say.format(user_name, user_age))

pi = "3.14159"
print("문자열 출력:", pi)
print("실수 변환 출력:", float(pi))
print(float(pi) +100)
year = "2018"
print("올해 연도: ", year)
print("100년 뒤는", int(year)+100,"년입니다.")
print("올해는 "+str(year)+"년입니다")

#10진수 -> 2진수 변환
print(128, "의 2진수 : ", bin(128))
print(255, "의 2진수 : ", bin(255))
#10진수 ->8진수 변환
print(7, "의 8진수 : ",oct(7))
print(8, "의 8진수 : ", oct(8))
#10진수 ->16진수 변환
print(15, "의 16진수 : ", hex(15))
print(16, "의 16진수 : ",hex(16))

#연산
numbers = [ 1, 5, -2, 0, 6]
print(numbers, "중 가장 큰 값은", max(numbers))
print(numbers, "중 가장 작은 값은", min(numbers))
print(numbers, "합계는 ", sum(numbers))
print("2의 10승은", pow(2,10))

pi = 3.14152
print(pi,"의 소수점 1자리 반올림은", round(pi))
print(pi, "의 소수점 1자리 반올림은", round(pi,0))
print(pi, "의 소수점 2자리 반올림은", round(pi,1))
print(pi,"의 소수점 3자리 반올림은", round(pi,2))
print(pi, "의 소수점 4자리 반올림은", round(pi,3))

#문자열을 인자값으로 넣으면, 공백 문자를 제외한 글자의 개수를 리텋나는 함수를 만드세요.
def count_without_space(string):
  string=string.replace(" ","")
  print(string)
  return len(string)

n = count_without_space("행복한 웃음소리로 포근히 끌어안으며")
print(n)

#리스트를 인자값으로 넣으면, 최댓값과 최솟값을 리턴하는 함수를 만드세요.
def max_min(list_a):
  return max(list_a), min(list_a)
max_value,min_value = max_min([10, 9,-1,5,70])
print(max_value, min_value)

#리스트 말고 인자값을,로 주루룩 넣으면, 최댓값과 최솟값을 리턴하는 함수를 만드세요.
#리스트를 인자값으로 넣으면, 최댓값과 최솟값을 리턴하는 함수를 만드세요.
def max_min(*numbers): #가변인자로 주어야함. number(tuple임)
  return max(numbers), min(numbers)
#이렇게 할수도 있음
#max_value = numbers[0]
#min_value = numbers[0]
#for number in numbers:
#  if number > max_value:
#    max_value = number
#   if number < min_value:
#     min_value = number
#   return max_value, min_value
max_value, min_value = max_min(10,9,-1,5,70)
print(max_value, min_value)
max_value, min_value = max_min(1,5,3)
print(max_value, min_value)

#인자값으로 이름과 나이를 받고, "000님의 나이는 00살입니다. ", 출력하기(나이 기본값은 18)
def print_name_age(name, age=18):
  print("{}님의 나이는 {}살 입니다.".format(name,age))
print_name_age("박재연") #위에 설정해 준 18이 우리가 써주지 않은 age공간에 들어감
print_name_age("황민현", 24)

#인자값으로 이름을 여러개 넣고, 끝에 인갓말을 넣으면,
#"000님 인삿말!" 출력하기(인삿말의 기본값은 "안녕하세요")
def say_hi(*names, hi="안녕하세요"):
  for name in names:
    print("{} 님 {}".format(name, hi))
say_hi("강채현", "박서빈") #강채현님 안녕하세요\n박서빈 님 안녕하세요
say_hi("강채현", "박서빈", hi="곤니찌와")

#random
import random
#random.random()
print(random.random())
#radnom.randrange()
print(random.randrange(1, 19+1))
#random.randint()
print(random.randint(1, 19))
#random.choice()
print(random.choice(list(range(1,19+1))))
print(random.choice(['컵밥','김밥','엽떡','막창','치킨']))
#random.sample()
print(random.sample(range(1,19+1), 3))
print(random.sample(['수박','귤','옥수수','군밤'],2))
#1<= r <=45 중 6개
print("로또: ",random.sample(range(1, 45+1),6))
#random.shuffle()